{"version":3,"sources":["logo.png","react-components/katex-a11y.js","NodeType.js","react-components/tex.jsx","print.js","Change.js","components/Step.jsx","components/Steps.jsx","components/Demo.jsx","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","stringMap","(",")","[","]","\\{","\\}","\\lvert","\\rvert","|","\\uparrow","\\Uparrow","\\downarrow","\\Downarrow","\\updownarrow","\\leftarrow","\\Leftarrow","\\rightarrow","\\Rightarrow","\\langle","\\rangle","\\lfloor","\\rfloor","\\int","\\intop","\\lim","\\ln","\\log","\\sin","\\cos","\\tan","\\cot","\\sum","/",",",".","-","+","~",":","?","'","\\%"," ","\\ ","\\$","\\angle","\\degree","\\circ","\\vec","\\triangle","\\pi","\\prime","\\infty","\\alpha","\\beta","\\gamma","\\omega","\\theta","\\sigma","\\lambda","\\tau","\\Delta","\\delta","\\mu","\\rho","\\nabla","\\ell","\\ldots","powerMap","openMap","closeMap","binMap","\\pm","\\cdot","*","\\times","\\div","\\bullet","relMap","=","\\approx","\\neq","\\ne","\\geq","\\ge","\\leq","\\le",">","<","buildString","str","type","a11yStrings","ret","test","Error","length","push","buildRegion","callback","region","typeHandlers","accent","tree","buildA11yStrings","value","base","bin","close","color","replace","delimsizing","genfrac","hasBarLine","leftDelim","numer","denom","rightDelim","katex","leftright","left","body","right","llap","mathord","op","open","ordgroup","overline","phantom","punct","rel","rlap","rule","sizing","spacing","styling","sqrt","index","supsub","sub","sup","newPower","supValue","text","textord","constructor","Array","i","parseMath","__parse","render","a11yNode","renderStrings","doc","ownerDocument","a11yString","appendChild","createTextNode","newBaseNode","createElement","renderString","flatten","array","result","forEach","item","isArray","concat","join","NodeType","node","operator","arguments","undefined","fn","includes","functionName","name","allowUnaryMinus","isUnaryMinus","isSymbol","args","isConstant","parseFloat","isOperator","every","n","isConstantFraction","numerator","denominator","Number","isInteger","PureRenderMixin","require","React","ReactDOM","PropTypes","CreateReactClass","katexA11y","pendingScripts","pendingCallbacks","needsProcess","process","script","setTimeout","doProcess","loadMathJax","MathJax","Khan","mathJaxLoaded","then","Hub","Queue","oldElementScripts","elementScripts","element","Process","_step","_iterator","_createForOfIteratorHelper","s","done","err","e","f","srOnly","border","clip","height","margin","overflow","padding","position","width","TeX","propTypes","children","onClick","func","onRender","style","any","mixins","getDefaultProps","componentDidMount","_this","this","_root","findDOMNode","refs","childElementCount","props","setScriptText","componentDidUpdate","prevProps","prevState","_this2","jax","getJaxFor","Remove","newText","Text","componentWillUnmount","_this3","document","mathjax","textContent","katexHtml","__html","renderToString","__proto__","ParseError","prototype","katexA11yHtml","ref","dangerouslySetInnerHTML","aria-hidden","printEquation","equation","leftNode","toTex","comparator","rightNode","oldNode","step","oldEquation","newNode","newEquation","Change","changeFormatFunctionMap","OP_TO_STRING","COMPARATOR_TO_STRING",">=","<=","getChangeNodes","filter","changeGroup","getOldChangeNodes","leftChangeNodeStrings","rightChangeNodeStrings","Object","toConsumableArray","getNewChangeNodes","nodesToString","nodes","duplicates","strings","map","Set","slice","formatChange","changeType","console","error","changeDescription","ChangeText","ChangeTypes","ABSOLUTE_VALUE","oldNodes","absNode","isFunction","string","ADD_COEFFICIENT_OF_ONE","newNodes","before","after","ADD_EXPONENT_OF_ONE","ADD_FRACTIONS","opNode","ADD_NUMERATORS","ADD_POLYNOMIAL_TERMS","ADD_TO_BOTH_SIDES","termNodes","term","BREAK_UP_FRACTION","CANCEL_EXPONENT","CANCEL_EXPONENT_AND_ROOT","CANCEL_MINUSES","CANCEL_ROOT","CANCEL_TERMS","COLLECT_AND_COMBINE_LIKE_TERMS","COLLECT_EXPONENTS","COLLECT_LIKE_TERMS","COMBINE_NUMERATORS","COMBINE_UNDER_ROOT","COMMON_DENOMINATOR","CONVERT_INTEGER_TO_FRACTION","CONVERT_MULTIPLICATION_TO_EXPONENT","DISTRIBUTE","DISTRIBUTE_NEGATIVE_ONE","DISTRIBUTE_NTH_ROOT","DIVIDE_FRACTION_FOR_ADDITION","DIVIDE_FROM_BOTH_SIDES","DIVISION_BY_NEGATIVE_ONE","DIVISION_BY_ONE","EVALUATE_DISTRIBUTED_NTH_ROOT","FACTOR_INTO_PRIMES","GROUP_COEFFICIENTS","GROUP_TERMS_BY_ROOT","MULTIPLY_BOTH_SIDES_BY_INVERSE_FRACTION","MULTIPLY_BOTH_SIDES_BY_NEGATIVE_ONE","MULTIPLY_BY_INVERSE","MULTIPLY_BY_ZERO","MULTIPLY_COEFFICIENTS","MULTIPLY_DENOMINATORS","MULTIPLY_FRACTIONS","MULTIPLY_NUMERATORS","MULTIPLY_POLYNOMIAL_TERMS","MULTIPLY_TO_BOTH_SIDES","NO_CHANGE","NTH_ROOT_VALUE","REARRANGE_COEFF","REDUCE_EXPONENT_BY_ZERO","REDUCE_ZERO_NUMERATOR","REMOVE_ADDING_ZERO","REMOVE_EXPONENT_BY_ONE","REMOVE_MULTIPLYING_BY_NEGATIVE_ONE","REMOVE_MULTIPLYING_BY_ONE","RESOLVE_DOUBLE_MINUS","SIMPLIFY_ARITHMETIC","indexOf","SIMPLIFY_DIVISION","SIMPLIFY_FRACTION","SIMPLIFY_LEFT_SIDE","SIMPLIFY_RIGHT_SIDE","SIMPLIFY_SIGNS","SIMPLIFY_TERMS","STATEMENT_IS_FALSE","STATEMENT_IS_TRUE","SUBTRACT_FROM_BOTH_SIDES","SWAP_SIDES","UNARY_MINUS_TO_NEGATIVE_ONE","DISTRIBUIR","Step","state","substepsExpanded","toggleSubsteps","setState","renderStep","react_default","a","className","tex_default","print","renderSubsteps","substeps","key","toString","toggleText","Component","Steps","renderSteps","steps","renderedSteps","Step_Step","mathInput","isEquation","input","mathsteps","solveEquation","simplifyExpression","App","mathString","onMathStringChange","_","newValue","nameInput","focus","_React$createElement","TextField_default","myRef","hintText","defineProperty","borderColor","Steps_Steps","MuiThemeProvider_default","Demo_App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","App_App","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a9be5754.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.08d204cb.png\";","// This file was copied from https://github.com/Khan/react-components\n\n/**\n * KaTeX A11y\n * A library for converting KaTeX math into readable strings.\n */\n\n// NOTE(jeresig): We need to keep this file as pure ES5 to avoid import\n// problems into webapp.\n/* eslint-disable no-var */\n/* global katex */\n\nvar stringMap = {\n    \"(\": \"left parenthesis\",\n    \")\": \"right parenthesis\",\n    \"[\": \"open bracket\",\n    \"]\": \"close bracket\",\n    \"\\\\{\": \"left brace\",\n    \"\\\\}\": \"right brace\",\n    \"\\\\lvert\": \"open vertical bar\",\n    \"\\\\rvert\": \"close vertical bar\",\n    \"|\": \"vertical bar\",\n    \"\\\\uparrow\": \"up arrow\",\n    \"\\\\Uparrow\": \"up arrow\",\n    \"\\\\downarrow\": \"down arrow\",\n    \"\\\\Downarrow\": \"down arrow\",\n    \"\\\\updownarrow\": \"up down arrow\",\n    \"\\\\leftarrow\": \"left arrow\",\n    \"\\\\Leftarrow\": \"left arrow\",\n    \"\\\\rightarrow\": \"right arrow\",\n    \"\\\\Rightarrow\": \"right arrow\",\n    \"\\\\langle\": \"open angle\",\n    \"\\\\rangle\": \"close angle\",\n    \"\\\\lfloor\": \"open floor\",\n    \"\\\\rfloor\": \"close floor\",\n    \"\\\\int\": \"integral\",\n    \"\\\\intop\": \"integral\",\n    \"\\\\lim\": \"limit\",\n    \"\\\\ln\": \"natural log\",\n    \"\\\\log\": \"log\",\n    \"\\\\sin\": \"sine\",\n    \"\\\\cos\": \"cosine\",\n    \"\\\\tan\": \"tangent\",\n    \"\\\\cot\": \"cotangent\",\n    \"\\\\sum\": \"sum\",\n    \"/\": \"slash\",\n    \",\": \"comma\",\n    \".\": \"point\",\n    \"-\": \"negative\",\n    \"+\": \"plus\",\n    \"~\": \"tilde\",\n    \":\": \"colon\",\n    \"?\": \"question mark\",\n    \"'\": \"apostrophe\",\n    \"\\\\%\": \"percent\",\n    \" \": \"space\",\n    \"\\\\ \": \"space\",\n    \"\\\\$\": \"dollar sign\",\n    \"\\\\angle\": \"angle\",\n    \"\\\\degree\": \"degree\",\n    \"\\\\circ\": \"circle\",\n    \"\\\\vec\": \"vector\",\n    \"\\\\triangle\": \"triangle\",\n    \"\\\\pi\": \"pi\",\n    \"\\\\prime\": \"prime\",\n    \"\\\\infty\": \"infinity\",\n    \"\\\\alpha\": \"alpha\",\n    \"\\\\beta\": \"beta\",\n    \"\\\\gamma\": \"gamma\",\n    \"\\\\omega\": \"omega\",\n    \"\\\\theta\": \"theta\",\n    \"\\\\sigma\": \"sigma\",\n    \"\\\\lambda\": \"lambda\",\n    \"\\\\tau\": \"tau\",\n    \"\\\\Delta\": \"delta\",\n    \"\\\\delta\": \"delta\",\n    \"\\\\mu\": \"mu\",\n    \"\\\\rho\": \"rho\",\n    \"\\\\nabla\": \"del\",\n    \"\\\\ell\": \"ell\",\n    \"\\\\ldots\": \"dots\",\n};\n\nvar powerMap = {\n    \"\\\\prime\": \"prime\",\n    \"\\\\degree\": \"degree\",\n    \"\\\\circ\": \"degree\",\n};\n\nvar openMap = {\n    \"|\": \"open vertical bar\",\n    \".\": \"\",\n};\n\nvar closeMap = {\n    \"|\": \"close vertical bar\",\n    \".\": \"\",\n};\n\nvar binMap = {\n    \"+\": \"plus\",\n    \"-\": \"minus\",\n    \"\\\\pm\": \"plus minus\",\n    \"\\\\cdot\": \"dot\",\n    \"*\": \"times\",\n    \"/\": \"divided by\",\n    \"\\\\times\": \"times\",\n    \"\\\\div\": \"divided by\",\n    \"\\\\circ\": \"circle\",\n    \"\\\\bullet\": \"bullet\",\n};\n\nvar relMap = {\n    \"=\": \"equals\",\n    \"\\\\approx\": \"approximately equals\",\n    \"\\\\neq\": \"does not equal\",\n    \"\\\\ne\": \"does not equal\",\n    \"\\\\geq\": \"is greater than or equal to\",\n    \"\\\\ge\": \"is greater than or equal to\",\n    \"\\\\leq\": \"is less than or equal to\",\n    \"\\\\le\": \"is less than or equal to\",\n    \">\": \"is greater than\",\n    \"<\": \"is less than\",\n    \"\\\\leftarrow\": \"left arrow\",\n    \"\\\\Leftarrow\": \"left arrow\",\n    \"\\\\rightarrow\": \"right arrow\",\n    \"\\\\Rightarrow\": \"right arrow\",\n    \":\": \"colon\",\n};\n\nvar buildString = function(str, type, a11yStrings) {\n    if (!str) {\n        return;\n    }\n\n    var ret;\n\n    if (type === \"open\") {\n        ret = (str in openMap ? openMap[str] : stringMap[str] || str);\n    } else if (type === \"close\") {\n        ret = (str in closeMap ? closeMap[str] : stringMap[str] || str);\n    } else if (type === \"bin\") {\n        ret = binMap[str] || str;\n    } else if (type === \"rel\") {\n        ret = relMap[str] || str;\n    } else {\n        ret = stringMap[str] || str;\n    }\n\n    // If nothing was found and it's not a plain string or number\n    if (ret === str && !/^\\w+$/.test(str)) {\n        // This is likely a case that we'll need to handle\n        throw new Error(\"KaTeX a11y \" + type + \" string not found: \" + str);\n    }\n\n    // If the text to add is a number and there is already a string\n    // in the list and the last string is a number then we should\n    // combine them into a single number\n    if (/^\\d+$/.test(ret) && a11yStrings.length > 0 &&\n            /^\\d+$/.test(a11yStrings[a11yStrings.length - 1])) {\n        a11yStrings[a11yStrings.length - 1] += ret;\n\n    } else if (ret) {\n        a11yStrings.push(ret);\n    }\n};\n\nvar buildRegion = function(a11yStrings, callback) {\n    var region = [];\n    a11yStrings.push(region);\n    callback(region);\n};\n\nvar typeHandlers = {\n    accent: function(tree, a11yStrings) {\n        buildRegion(a11yStrings, function(a11yStrings) {\n            buildA11yStrings(tree.value.base, a11yStrings);\n            a11yStrings.push(\"with\");\n            buildA11yStrings(tree.value.accent, a11yStrings);\n            a11yStrings.push(\"on top\");\n        });\n    },\n\n    bin: function(tree, a11yStrings) {\n        buildString(tree.value, \"bin\", a11yStrings);\n    },\n\n    close: function(tree, a11yStrings) {\n        buildString(tree.value, \"close\", a11yStrings);\n    },\n\n    color: function(tree, a11yStrings) {\n        var color = tree.value.color.replace(/katex-/, \"\");\n\n        buildRegion(a11yStrings, function(a11yStrings) {\n            a11yStrings.push(\"start color \" + color);\n            buildA11yStrings(tree.value.value, a11yStrings);\n            a11yStrings.push(\"end color \" + color);\n        });\n    },\n\n    delimsizing: function(tree, a11yStrings) {\n        if (tree.value.value && tree.value.value !== \".\") {\n            buildString(tree.value.value, \"normal\", a11yStrings);\n        }\n    },\n\n    genfrac: function(tree, a11yStrings) {\n        buildRegion(a11yStrings, function(a11yStrings) {\n            // NOTE: Not sure if this is a safe assumption\n            // hasBarLine true -> fraction, false -> binomial\n            if (tree.value.hasBarLine) {\n                a11yStrings.push(\"start fraction\");\n                buildString(tree.value.leftDelim, \"open\", a11yStrings);\n                buildA11yStrings(tree.value.numer, a11yStrings);\n                a11yStrings.push(\"divided by\");\n                buildA11yStrings(tree.value.denom, a11yStrings);\n                buildString(tree.value.rightDelim, \"close\", a11yStrings);\n                a11yStrings.push(\"end fraction\");\n            } else {\n                a11yStrings.push(\"start binomial\");\n                buildString(tree.value.leftDelim, \"open\", a11yStrings);\n                buildA11yStrings(tree.value.numer, a11yStrings);\n                a11yStrings.push(\"over\");\n                buildA11yStrings(tree.value.denom, a11yStrings);\n                buildString(tree.value.rightDelim, \"close\", a11yStrings);\n                a11yStrings.push(\"end binomial\");\n            }\n        });\n    },\n\n    // inner\n\n    katex: function(tree, a11yStrings) {\n        a11yStrings.push(\"KaTeX\");\n    },\n\n    leftright: function(tree, a11yStrings) {\n        buildRegion(a11yStrings, function(a11yStrings) {\n            buildString(tree.value.left, \"open\", a11yStrings);\n            buildA11yStrings(tree.value.body, a11yStrings);\n            buildString(tree.value.right, \"close\", a11yStrings);\n        });\n    },\n\n    llap: function(tree, a11yStrings) {\n        buildA11yStrings(tree.value.body, a11yStrings);\n    },\n\n    mathord: function(tree, a11yStrings) {\n        buildA11yStrings(tree.value, a11yStrings);\n    },\n\n    op: function(tree, a11yStrings) {\n        buildString(tree.value.body, \"normal\", a11yStrings);\n    },\n\n    open: function(tree, a11yStrings) {\n        buildString(tree.value, \"open\", a11yStrings);\n    },\n\n    ordgroup: function(tree, a11yStrings) {\n        buildA11yStrings(tree.value, a11yStrings);\n    },\n\n    overline: function(tree, a11yStrings) {\n        buildRegion(a11yStrings, function(a11yStrings) {\n            a11yStrings.push(\"start overline\");\n            buildA11yStrings(tree.value.body, a11yStrings);\n            a11yStrings.push(\"end overline\");\n        });\n    },\n\n    phantom: function(tree, a11yStrings) {\n        a11yStrings.push(\"empty space\");\n    },\n\n    punct: function(tree, a11yStrings) {\n        buildString(tree.value, \"punct\", a11yStrings);\n    },\n\n    rel: function(tree, a11yStrings) {\n        buildString(tree.value, \"rel\", a11yStrings);\n    },\n\n    rlap: function(tree, a11yStrings) {\n        buildA11yStrings(tree.value.body, a11yStrings);\n    },\n\n    rule: function(tree, a11yStrings) {\n        // NOTE: Is there something more useful that we can put here?\n        a11yStrings.push(\"rule\");\n    },\n\n    sizing: function(tree, a11yStrings) {\n        buildA11yStrings(tree.value.value, a11yStrings);\n    },\n\n    spacing: function(tree, a11yStrings) {\n        a11yStrings.push(\"space\");\n    },\n\n    styling: function(tree, a11yStrings) {\n        // We ignore the styling and just pass through the contents\n        buildA11yStrings(tree.value.value, a11yStrings);\n    },\n\n    sqrt: function(tree, a11yStrings) {\n        buildRegion(a11yStrings, function(a11yStrings) {\n            if (tree.value.index) {\n                a11yStrings.push(\"root\");\n                a11yStrings.push(\"start index\");\n                buildA11yStrings(tree.value.index, a11yStrings);\n                a11yStrings.push(\"end index\");\n            }\n\n            a11yStrings.push(\"square root of\");\n            buildA11yStrings(tree.value.body, a11yStrings);\n            a11yStrings.push(\"end square root\");\n        });\n    },\n\n    supsub: function(tree, a11yStrings) {\n        if (tree.value.base) {\n            buildA11yStrings(tree.value.base, a11yStrings);\n        }\n\n        if (tree.value.sub) {\n            buildRegion(a11yStrings, function(a11yStrings) {\n                a11yStrings.push(\"start subscript\");\n                buildA11yStrings(tree.value.sub, a11yStrings);\n                a11yStrings.push(\"end subscript\");\n            });\n        }\n\n        var sup = tree.value.sup;\n\n        if (sup) {\n            // There are some cases that just read better if we don't have\n            // the extra start/end baggage, so we skip the extra text\n            var newPower = powerMap[sup];\n            var supValue = sup.value;\n\n            // The value stored inside the sup property is not always\n            // consistent. It could be a string (handled above), an object\n            // with a string property in value, or an array of objects that\n            // have a value property.\n            if (!newPower && supValue) {\n                // If supValue is an object and it has a length of 1 we assume\n                // it's an array that has only a single item in it. This is the\n                // case that we care about and we only check that one value.\n                if (typeof supValue === \"object\" && supValue.length === 1) {\n                    newPower = powerMap[supValue[0].value];\n\n                // This is the case where it's a string in the value property\n                } else {\n                    newPower = powerMap[supValue];\n                }\n            }\n\n            buildRegion(a11yStrings, function(a11yStrings) {\n                if (newPower) {\n                    a11yStrings.push(newPower);\n                    return;\n                }\n\n                a11yStrings.push(\"start superscript\");\n                buildA11yStrings(tree.value.sup, a11yStrings);\n                a11yStrings.push(\"end superscript\");\n            });\n        }\n    },\n\n    text: function(tree, a11yStrings) {\n        if (typeof tree.value !== \"string\") {\n            buildA11yStrings(tree.value.body, a11yStrings);\n        } else {\n            buildString(tree, \"normal\", a11yStrings);\n        }\n    },\n\n    textord: function(tree, a11yStrings) {\n        buildA11yStrings(tree.value, a11yStrings);\n    },\n};\n\nvar buildA11yStrings = function(tree, a11yStrings) {\n    a11yStrings = a11yStrings || [];\n\n    // Handle strings\n    if (typeof tree === \"string\") {\n        buildString(tree, \"normal\", a11yStrings);\n\n    // Handle arrays\n    } else if (tree.constructor === Array) {\n        for (var i = 0; i < tree.length; i++) {\n            buildA11yStrings(tree[i], a11yStrings);\n        }\n\n    // Everything else is assumed to be an object...\n    } else {\n        if (!tree.type || !(tree.type in typeHandlers)) {\n            throw new Error(\"KaTeX a11y un-recognized type: \" + tree.type);\n        } else {\n            typeHandlers[tree.type](tree, a11yStrings);\n        }\n    }\n\n    return a11yStrings;\n};\n\nvar renderStrings = function(a11yStrings, a11yNode) {\n    var doc = a11yNode.ownerDocument;\n\n    for (var i = 0; i < a11yStrings.length; i++) {\n        var a11yString = a11yStrings[i];\n\n        if (i > 0) {\n            // Note: We insert commas in (not just spaces) to provide\n            // screen readers with some \"breathing room\". When inserting the\n            // commas the screen reader knows to pause slightly and it provides\n            // an overall better listening experience.\n            a11yNode.appendChild(doc.createTextNode(\", \"));\n        }\n\n        if (typeof a11yString === \"string\") {\n            a11yNode.appendChild(doc.createTextNode(a11yString));\n        } else {\n            var newBaseNode = doc.createElement(\"span\");\n            // NOTE(jeresig): We may want to add in a tabIndex property\n            // to the node here, in order to support keyboard navigation.\n            a11yNode.appendChild(newBaseNode);\n            renderStrings(a11yString, newBaseNode);\n        }\n    }\n};\n\nvar flattenStrings = function(a11yStrings, results) {\n    if (!results) {\n        results = [];\n    }\n\n    for (var i = 0; i < a11yStrings.length; i++) {\n        var a11yString = a11yStrings[i];\n\n        if (typeof a11yString === \"string\") {\n            results.push(a11yString);\n        } else {\n            flattenStrings(a11yString, results);\n        }\n    }\n\n    return results;\n};\n\nvar parseMath = function(text) {\n    // NOTE: `katex` is a global, should be included using require\n    return katex.__parse(text);\n};\n\nvar render = function(text, a11yNode) {\n    var tree = parseMath(text);\n    var a11yStrings = buildA11yStrings(tree);\n    renderStrings(a11yStrings, a11yNode);\n};\n\nvar flatten = function(array) {\n    var result = [];\n\n    array.forEach(function(item) {\n        if (Array.isArray(item)) {\n            result = result.concat(flatten(item));\n        } else {\n            result.push(item);\n        }\n    });\n\n    return result;\n};\n\nvar renderString = function(text) {\n    var tree = parseMath(text);\n    var a11yStrings = buildA11yStrings(tree);\n    return flatten(a11yStrings).join(\", \");\n};\n\nif (typeof module !== \"undefined\") {\n    module.exports = {\n        render: render,\n        renderString: renderString,\n        parseMath: parseMath,\n    };\n} else {\n    this.katexA11yRender = render;\n}\n","/*\n  For determining the type of a mathJS node.\n */\n\nconst NodeType = {};\n\nNodeType.isOperator = function(node, operator=null) {\n  return node.type === 'OperatorNode' &&\n         node.fn !== 'unaryMinus' &&\n         '*+-/^'.includes(node.op) &&\n         (operator ? node.op === operator : true);\n};\n\nNodeType.isParenthesis = function(node) {\n  return node.type === 'ParenthesisNode';\n};\n\nNodeType.isUnaryMinus = function(node) {\n  return node.type === 'OperatorNode' && node.fn === 'unaryMinus';\n};\n\nNodeType.isFunction = function(node, functionName=null) {\n  if (node.type !== 'FunctionNode') {\n    return false;\n  }\n  if (functionName && node.fn.name !== functionName) {\n    return false;\n  }\n  return true;\n};\n\nNodeType.isSymbol = function(node, allowUnaryMinus=false) {\n  if (node.type === 'SymbolNode') {\n    return true;\n  }\n  else if (allowUnaryMinus && NodeType.isUnaryMinus(node)) {\n    return NodeType.isSymbol(node.args[0], false);\n  }\n  else {\n    return false;\n  }\n};\n\nNodeType.isConstant = function(node, allowUnaryMinus=false) {\n  if (node.type === 'ConstantNode') {\n    return true;\n  }\n  else if (allowUnaryMinus && NodeType.isUnaryMinus(node)) {\n    if (NodeType.isConstant(node.args[0], false)) {\n      const value = parseFloat(node.args[0].value);\n      return value >= 0;\n    }\n    else {\n      return false;\n    }\n  }\n  else {\n    return false;\n  }\n};\n\nNodeType.isConstantFraction = function(node, allowUnaryMinus=false) {\n  if (NodeType.isOperator(node, '/')) {\n    return node.args.every(n => NodeType.isConstant(n, allowUnaryMinus));\n  }\n  else {\n    return false;\n  }\n};\n\nNodeType.isConstantOrConstantFraction = function(node, allowUnaryMinus=false) {\n  if (NodeType.isConstant(node, allowUnaryMinus) ||\n      NodeType.isConstantFraction(node, allowUnaryMinus)) {\n    return true;\n  }\n  else {\n    return false;\n  }\n};\n\nNodeType.isIntegerFraction = function(node, allowUnaryMinus=false) {\n  if (!NodeType.isConstantFraction(node, allowUnaryMinus)) {\n    return false;\n  }\n  let numerator = node.args[0];\n  let denominator = node.args[1];\n  if (allowUnaryMinus) {\n    if (NodeType.isUnaryMinus(numerator)) {\n      numerator = numerator.args[0];\n    }\n    if (NodeType.isUnaryMinus(denominator)) {\n      denominator = denominator.args[0];\n    }\n  }\n  return (Number.isInteger(parseFloat(numerator.value)) &&\n          Number.isInteger(parseFloat(denominator.value)));\n};\n\nmodule.exports = NodeType;\n","// This file was copied from https://github.com/Khan/react-components\n\n/**\n * For math rendered using KaTex and/or MathJax. Use me like <TeX>2x + 3</TeX>.\n */\n/* global katex, MathJax, Khan */\n// TODO(joel) - require MathJax / katex so they don't have to be global\n\nconst PureRenderMixin = require('react-addons-pure-render-mixin');\nconst React = require('react');\nconst ReactDOM = require('react-dom');\nconst PropTypes = require('prop-types');\nconst CreateReactClass = require('create-react-class');\n\nconst katexA11y = require('./katex-a11y.js');\n\nlet pendingScripts = [];\nlet pendingCallbacks = [];\nlet needsProcess = false;\n\nconst process = (script, callback) => {\n    pendingScripts.push(script);\n    pendingCallbacks.push(callback);\n    if (!needsProcess) {\n        needsProcess = true;\n        setTimeout(doProcess, 0);\n    }\n};\n\nconst loadMathJax = (callback) => {\n    if (typeof MathJax !== \"undefined\") {\n        callback();\n    } else if (typeof Khan !== \"undefined\" && Khan.mathJaxLoaded) {\n        Khan.mathJaxLoaded.then(callback);\n    } else {\n        throw new Error(\n            \"MathJax wasn't loaded before it was needed by <TeX/>\");\n    }\n};\n\nconst doProcess = () => {\n    loadMathJax(() => {\n        MathJax.Hub.Queue(function() {\n            const oldElementScripts = MathJax.Hub.elementScripts;\n            MathJax.Hub.elementScripts = (element) => pendingScripts;\n\n            try {\n                return MathJax.Hub.Process(null, () => {\n                    // Trigger all of the pending callbacks before clearing them\n                    // out.\n                    for (const callback of pendingCallbacks) {\n                        callback();\n                    }\n\n                    pendingScripts = [];\n                    pendingCallbacks = [];\n                    needsProcess = false;\n                });\n            } catch (e) {\n                // IE8 requires `catch` in order to use `finally`\n                throw e;\n            } finally {\n                MathJax.Hub.elementScripts = oldElementScripts;\n            }\n        });\n    });\n};\n\n// Make content only visible to screen readers.\n// Both collegeboard.org and Bootstrap 3 use this exact implementation.\nconst srOnly = {\n    border: 0,\n    clip: \"rect(0,0,0,0)\",\n    height: \"1px\",\n    margin: \"-1px\",\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    width: \"1px\",\n};\n\nconst TeX = CreateReactClass({\n    propTypes: {\n        children: PropTypes.node,\n        onClick: PropTypes.func,\n        onRender: PropTypes.func,\n        style: PropTypes.any,\n    },\n\n    mixins: [PureRenderMixin],\n\n    getDefaultProps: function() {\n        return {\n            // Called after math is rendered or re-rendered\n            onRender: function() {},\n            onClick: null,\n        };\n    },\n\n    componentDidMount: function() {\n        this._root = ReactDOM.findDOMNode(this);\n\n        if (this.refs.katex.childElementCount > 0) {\n            // If we already rendered katex in the render function, we don't\n            // need to render anything here.\n            this.props.onRender(this._root);\n            return;\n        }\n\n        const text = this.props.children;\n\n        this.setScriptText(text);\n        process(this.script, () => this.props.onRender(this._root));\n    },\n\n    componentDidUpdate: function(prevProps, prevState) {\n        // If we already rendered katex in the render function, we don't\n        // need to render anything here.\n        if (this.refs.katex.childElementCount > 0) {\n            if (this.script) {\n                // If we successfully rendered KaTeX, check if there's\n                // lingering MathJax from the last render, and if so remove it.\n                loadMathJax(() => {\n                    const jax = MathJax.Hub.getJaxFor(this.script);\n                    if (jax) {\n                        jax.Remove();\n                    }\n                });\n            }\n\n            this.props.onRender();\n            return;\n        }\n\n        const newText = this.props.children;\n\n        if (this.script) {\n            loadMathJax(() => {\n                MathJax.Hub.Queue(() => {\n                    const jax = MathJax.Hub.getJaxFor(this.script);\n                    if (jax) {\n                        return jax.Text(newText, this.props.onRender);\n                    } else {\n                        this.setScriptText(newText);\n                        process(this.script, this.props.onRender);\n                    }\n                });\n            });\n        } else {\n            this.setScriptText(newText);\n            process(this.script, this.props.onRender);\n        }\n    },\n\n    componentWillUnmount: function() {\n        if (this.script) {\n            loadMathJax(() => {\n                const jax = MathJax.Hub.getJaxFor(this.script);\n                if (jax) {\n                    jax.Remove();\n                }\n            });\n        }\n    },\n\n    setScriptText: function(text) {\n        if (!this.script) {\n            this.script = document.createElement(\"script\");\n            this.script.type = \"math/tex\";\n            ReactDOM.findDOMNode(this.refs.mathjax).appendChild(this.script);\n        }\n        if (\"text\" in this.script) {\n            // IE8, etc\n            this.script.text = text;\n        } else {\n            this.script.textContent = text;\n        }\n    },\n\n    render: function() {\n        let katexHtml = null;\n        try {\n            katexHtml = {\n                __html: katex.renderToString(this.props.children),\n            };\n        } catch (e) {\n            /* jshint -W103 */\n            if (e.__proto__ !== katex.ParseError.prototype) {\n            /* jshint +W103 */\n                throw e;\n            }\n        }\n\n        let katexA11yHtml = null;\n        if (katexHtml) {\n            try {\n                katexA11yHtml = {\n                    __html: katexA11y.renderString(this.props.children),\n                };\n            } catch (e) {\n                // Nothing\n            }\n        }\n\n        return <span\n            style={this.props.style}\n            onClick={this.props.onClick}\n        >\n            <span ref=\"mathjax\" />\n            <span\n                ref=\"katex\"\n                dangerouslySetInnerHTML={katexHtml}\n                aria-hidden={!!katexHtml && !!katexA11yHtml}\n            />\n            <span\n                dangerouslySetInnerHTML={katexA11yHtml}\n                style={srOnly}\n            />\n        </span>;\n    },\n});\n\nmodule.exports = TeX;\n","const printEquation = (equation) => {\n  return `${equation.leftNode.toTex()} ${equation.comparator} ${equation.rightNode.toTex()}`;\n}\n\nconst printOldNode = (step) => {\n  return step.oldNode ? step.oldNode.toTex() : printEquation(step.oldEquation);\n}\n\nconst printNewNode = (step) => {\n  return step.newNode ? step.newNode.toTex() : printEquation(step.newEquation);\n}\n\nmodule.exports = {\n  oldNode: printOldNode,\n  newNode: printNewNode\n}\n","import { ChangeTypes } from 'mathsteps';\nimport NodeType from './NodeType.js'\n\nconst Change = {\n\tchangeFormatFunctionMap: {}\n};\n\nconst OP_TO_STRING = {\n  '+': 'Combine',\n  '-': 'Combine',\n  '*': 'Multiply',\n  '/': 'Divide'\n};\n\nconst COMPARATOR_TO_STRING = {\n  '=': 'equal to',\n  '>': 'greater than',\n  '>=': 'greater than or equal to',\n  '<': 'less than',\n  '<=': 'less than or equal to',\n};\n\n// Given a step, will return the change and explanation for the change\n// from the oldNode, newNode, and changeType\nChange.formatChange = function(step) {\n  if (!(step.changeType in Change.changeFormatFunctionMap)) {\n  \t// TODO: add tests that will alert us when a new change type doesn't\n  \t// have a change function yet\n  \tconsole.error(step.changeType + ' does not have a change function!');\n    return step.changeType;\n  }\n\n  const changeFormatFunctionMap = Change.changeFormatFunctionMap[step.changeType];\n  let changeDescription = changeFormatFunctionMap(step);\n  if (!changeDescription) {\n    return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n  }\n\n  return changeDescription;\n};\n\nfunction getChangeNodes(node) {\n  return node.filter(node => node.changeGroup);\n}\n\nfunction getOldChangeNodes(step) {\n  if (step.oldNode) {\n    return getChangeNodes(step.oldNode);\n  }\n  else if (step.oldEquation) {\n    const leftChangeNodeStrings = getChangeNodes(step.oldEquation.leftNode);\n    const rightChangeNodeStrings = getChangeNodes(step.oldEquation.rightNode);\n    return [...leftChangeNodeStrings, ...rightChangeNodeStrings];\n  }\n  return null;\n}\n\nfunction getNewChangeNodes(step) {\n  if (step.newNode) {\n    return getChangeNodes(step.newNode);\n  }\n  else if (step.newEquation) {\n    const leftChangeNodeStrings = getChangeNodes(step.newEquation.leftNode);\n    const rightChangeNodeStrings = getChangeNodes(step.newEquation.rightNode);\n    return [...leftChangeNodeStrings, ...rightChangeNodeStrings];\n  }\n  return null;\n}\n\nfunction nodesToString(nodes, duplicates=false) {\n  // get rid of changeGroup so we can find duplicates\n  nodes.forEach(node => { node.changeGroup = undefined; });\n\n  let strings = nodes.map(node => node.toTex());\n  if (!duplicates) {\n    strings = [...new Set(strings)];\n  }\n\n  if (strings.length === 0) {\n    return '';\n  }\n  else if (strings.length === 1) {\n    return strings[0];\n  }\n  else {\n    return `${strings.slice(0, -1).join(', ')} \\\\text{ and } ${strings.slice(-1)}`;\n  }\n}\n\n// e.g. |-3| -> 3\nChange.changeFormatFunctionMap[ChangeTypes.ABSOLUTE_VALUE] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  if (oldNodes.length !== 1) {\n    return null;\n  }\n\n  const absNode = oldNodes[0];\n  if (!NodeType.isFunction(absNode, 'abs')) {\n    return null;\n  }\n\n  const string = absNode.args[0].toTex();\n  return `\\\\text{Take the absolute value of } ${string}`;\n};\n\n// e.g. 2x + x -> 2x + 1x\nChange.changeFormatFunctionMap[ChangeTypes.ADD_COEFFICIENT_OF_ONE] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  const newNodes = getNewChangeNodes(step);\n  if (oldNodes.length === 0 || newNodes.length !== oldNodes.length) {\n    return null;\n  }\n\n  const before = nodesToString(oldNodes);\n  const after = nodesToString(newNodes);\n  return `\\\\text{Rewrite } ${before} \\\\text{ as } ${after}`;\n};\n\n// e.g. x^2 * x -> x^2 * x^1\nChange.changeFormatFunctionMap[ChangeTypes.ADD_EXPONENT_OF_ONE] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  const newNodes = getNewChangeNodes(step);\n  if (oldNodes.length === 0 || newNodes.length !== oldNodes.length) {\n    return null;\n  }\n\n  const before = nodesToString(oldNodes);\n  const after = nodesToString(newNodes);\n  return `\\\\text{Rewrite } ${before} \\\\text{ as } ${after}`;\n};\n\n// e.g. 1/2 + 1/3 -> 5/6\nChange.changeFormatFunctionMap[ChangeTypes.ADD_FRACTIONS] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  const newNodes = getNewChangeNodes(step);\n  if (oldNodes.length !== 1 || newNodes.length !== 1) {\n    return null;\n  }\n\n  const opNode = oldNodes[0];\n  if (!NodeType.isOperator(opNode) || opNode.op !== '+' || opNode.args.length > 3) {\n    return null;\n  }\n\n  const before = nodesToString(opNode.args, true);\n  const after = newNodes[0].toTex();\n  return `\\\\text{Add } ${before} \\\\text{ to get } ${after}`;\n};\n\n// e.g. (1 + 2)/3 -> 3/3\nChange.changeFormatFunctionMap[ChangeTypes.ADD_NUMERATORS] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. x^2 + x^2 -> 2x^2\nChange.changeFormatFunctionMap[ChangeTypes.ADD_POLYNOMIAL_TERMS] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  const newNodes = getNewChangeNodes(step);\n  if (oldNodes.length !== 1 || newNodes.length !== 1) {\n    return null;\n  }\n\n  const opNode = oldNodes[0];\n  if (!NodeType.isOperator(opNode) || opNode.op !== '+') {\n    return null;\n  }\n\n  const before = nodesToString(opNode.args, true);\n  const after = newNodes[0].toTex();\n  return `\\\\text{Add } ${before} \\\\text{ to get } ${after}`;\n};\n\n// e.g. x - 3 = 2 -> x - 3 + 3 = 2 + 3\nChange.changeFormatFunctionMap[ChangeTypes.ADD_TO_BOTH_SIDES] = function(step) {\n  // there is a term node on each side of the equation\n  const termNodes = getNewChangeNodes(step);\n  if (termNodes.length !== 2) {\n    return null;\n  }\n\n  const term = termNodes[0].toTex();\n  return `\\\\text{Add } ${term} \\\\text{ to both sides}`;\n};\n\n// e.g. (x + 2)/2 -> x/2 + 2/2\nChange.changeFormatFunctionMap[ChangeTypes.BREAK_UP_FRACTION] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  if (oldNodes.length !== 1) {\n    return null;\n  }\n\n  const before = nodesToString(oldNodes);\n  return `\\\\text{Break up the fraction } ${before}`;\n};\n\n// e.g. nthRoot(x ^ 2, 4) -> nthRoot(x, 2)\nChange.changeFormatFunctionMap[ChangeTypes.CANCEL_EXPONENT] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. nthRoot(x ^ 2, 2) -> x\nChange.changeFormatFunctionMap[ChangeTypes.CANCEL_EXPONENT_AND_ROOT] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. nthRoot(x ^ 2, 2) -> x\nChange.changeFormatFunctionMap[ChangeTypes.CANCEL_MINUSES] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. nthRoot(x ^ 4, 2) -> x ^ 2\nChange.changeFormatFunctionMap[ChangeTypes.CANCEL_ROOT] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. 2x/2 -> x\nChange.changeFormatFunctionMap[ChangeTypes.CANCEL_TERMS] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  if (oldNodes.length !== 1) {\n    return null;\n  }\n\n  const before = nodesToString(oldNodes);\n  return `\\\\text{Cancel } ${before} \\\\text{ from the numerator and denominator}`;\n};\n\n// e.g. 2 + x + 3 + x -> 5 + 2x\nChange.changeFormatFunctionMap[ChangeTypes.COLLECT_AND_COMBINE_LIKE_TERMS] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. x^2 * x^3 * x^1 -> x^(2 + 3 + 1)\nChange.changeFormatFunctionMap[ChangeTypes.COLLECT_EXPONENTS] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. x + 2 + x^2 + x + 4 -> x^2 + (x + x) + (4 + 2)\nChange.changeFormatFunctionMap[ChangeTypes.COLLECT_LIKE_TERMS] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. 2/5 + 1/5 -> (2+1)/5\nChange.changeFormatFunctionMap[ChangeTypes.COMBINE_NUMERATORS] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. nthRoot(2, 2) * nthRoot(3, 2) -> nthRoot(2 * 3, 2)\nChange.changeFormatFunctionMap[ChangeTypes.COMBINE_UNDER_ROOT] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. 2/6 + 1/4 -> (2*2)/(6*2) + (1*3)/(4*3)\nChange.changeFormatFunctionMap[ChangeTypes.COMMON_DENOMINATOR] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. 3 + 1/2 -> 6/2 + 1/2\nChange.changeFormatFunctionMap[ChangeTypes.CONVERT_INTEGER_TO_FRACTION] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  const newNodes = getNewChangeNodes(step);\n  if (oldNodes.length !== 1 || newNodes.length !== 1) {\n    return null;\n  }\n\n  const before = nodesToString(oldNodes);\n  const after = nodesToString(newNodes);\n  return `\\\\text{Change } ${before} \\\\text{ to } ${after} \\\\text{ so that it has a shared denominator}`;\n};\n\n// e.g. 2 * 2 * 2 -> 2 ^ 3\nChange.changeFormatFunctionMap[ChangeTypes.CONVERT_MULTIPLICATION_TO_EXPONENT] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  const newNodes = getNewChangeNodes(step);\n  if (oldNodes.length !== 1 || newNodes.length !== 1) {\n    return null;\n  }\n\n  const before = nodesToString(oldNodes);\n  const after = nodesToString(newNodes);\n  return `\\\\text{Rewrite } ${before} \\\\text{ as } ${after}`;\n};\n\n// e.g. 2(x + y) -> 2x + 2y\nChange.changeFormatFunctionMap[ChangeTypes.DISTRIBUTE] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. -(2 + x) -> -2 - x\nChange.changeFormatFunctionMap[ChangeTypes.DISTRIBUTE_NEGATIVE_ONE] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. nthRoot(2 * x) -> nthRoot(2) * nthRoot(x)\nChange.changeFormatFunctionMap[ChangeTypes.DISTRIBUTE_NTH_ROOT] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// 1.2 + 1/2 -> 1.2 + 0.5\nChange.changeFormatFunctionMap[ChangeTypes.DIVIDE_FRACTION_FOR_ADDITION] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  const newNodes = getNewChangeNodes(step);\n  if (oldNodes.length !== 1 || newNodes.length !== 1) {\n    return null;\n  }\n\n  const before = nodesToString(oldNodes);\n  const after = nodesToString(newNodes);\n  return `\\\\text{Divide } ${before} \\\\text{ so it's in the decimal form } ${after}`;\n};\n\n// e.g. 2x = 1 -> (2x)/2 = 1/2\nChange.changeFormatFunctionMap[ChangeTypes.DIVIDE_FROM_BOTH_SIDES] = function(step) {\n  const termNodes = getNewChangeNodes(step);\n  if (termNodes.length !== 2) {\n    return null;\n  }\n\n  const term = termNodes[0].toTex();\n  return `\\\\text{Divide both sides by } ${term}`;\n};\n\n// e.g. 2/-1 -> -2\nChange.changeFormatFunctionMap[ChangeTypes.DIVISION_BY_NEGATIVE_ONE] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  const newNodes = getNewChangeNodes(step);\n  if (oldNodes.length !== 1 || newNodes.length !== 1) {\n    return null;\n  }\n\n  const before = nodesToString(oldNodes);\n  const after = nodesToString(newNodes);\n  return `${before} \\\\text{ divided by -1 is } ${after}`;\n};\n\n// e.g. 2/1 -> 2\nChange.changeFormatFunctionMap[ChangeTypes.DIVISION_BY_ONE] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  const newNodes = getNewChangeNodes(step);\n  if (oldNodes.length !== 1 || newNodes.length !== 1) {\n    return null;\n  }\n\n  const before = nodesToString(oldNodes);\n  const after = nodesToString(newNodes);\n  return `${before} \\\\text{ divided by 1 is } ${after}`;\n};\n\n// e.g. nthRoot(4) * nthRoot(x^2) -> 2 * x\nChange.changeFormatFunctionMap[ChangeTypes.EVALUATE_DISTRIBUTED_NTH_ROOT] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. 12 -> 2 * 2 * 3\nChange.changeFormatFunctionMap[ChangeTypes.FACTOR_INTO_PRIMES] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  const newNodes = getNewChangeNodes(step);\n  if (oldNodes.length !== 1 || newNodes.length < oldNodes.length || newNodes.length > 5) {\n    return null;\n  }\n\n  const before = nodesToString(oldNodes);\n  const after = nodesToString(newNodes);\n  return `\\\\text{Factor } ${before} \\\\text{ into its prime factors: } ${after}`;\n};\n\n// e.g. 2x^2 + 3x^2 + 5x^2 -> (2+3+5)x^2\nChange.changeFormatFunctionMap[ChangeTypes.GROUP_COEFFICIENTS] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. nthRoot(2 * 2 * 2, 2) -> nthRoot((2 * 2) * 2)\nChange.changeFormatFunctionMap[ChangeTypes.GROUP_TERMS_BY_ROOT] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. (2/3)x = 1 -> (2/3)x * (3/2) = 1 * (3/2)\nChange.changeFormatFunctionMap[ChangeTypes.MULTIPLY_BOTH_SIDES_BY_INVERSE_FRACTION] = function(step) {\n  const termNodes = getNewChangeNodes(step);\n  if (termNodes.length !== 2) {\n    return null;\n  }\n\n  const term = termNodes[0].toTex();\n  return `\\\\text{Multiply both sides by the inverse } ${term}`;\n};\n\n// e.g. -x = 2 -> -1 * -x = -1 * 2\nChange.changeFormatFunctionMap[ChangeTypes.MULTIPLY_BOTH_SIDES_BY_NEGATIVE_ONE] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. x/(2/3) -> x * 3/2\nChange.changeFormatFunctionMap[ChangeTypes.MULTIPLY_BY_INVERSE] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  const newNodes = getNewChangeNodes(step);\n  if (oldNodes.length !== 1 || newNodes.length !== 1) {\n    return null;\n  }\n\n  const before = nodesToString(oldNodes, true);\n  const after = nodesToString(newNodes);\n  return `\\\\text{Rewrite } ${before} \\\\text{ as } ${after}`;\n};\n\n// e.g. x * 0 -> 0\nChange.changeFormatFunctionMap[ChangeTypes.MULTIPLY_BY_ZERO] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  const newNodes = getNewChangeNodes(step);\n  if (oldNodes.length !== 1 || newNodes.length !== 1) {\n    return null;\n  }\n\n  const before = nodesToString(oldNodes);\n  const after = nodesToString(newNodes);\n  return `\\\\text{Rewrite } ${before} \\\\text{ as } ${after}`;\n};\n\n// e.g. (2 * 3)(x * x) -> 6(x*x)\nChange.changeFormatFunctionMap[ChangeTypes.MULTIPLY_COEFFICIENTS] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  const newNodes = getNewChangeNodes(step);\n  if (oldNodes.length !== 1 || newNodes.length !== 1) {\n    return null;\n  }\n\n  const opNode = oldNodes[0];\n  if (!NodeType.isOperator(opNode) || opNode.op !== '*') {\n    return null;\n  }\n\n  const before = nodesToString(oldNodes, true);\n  const after = newNodes[0].toTex();\n  return `\\\\text{Multiply the coefficients } ${before} \\\\text{ to get } ${after}`;\n};\n\n// e.g. (2*2)/(6*2) + (1*3)/(4*3) -> (2*2)/12 + (1*3)/12\nChange.changeFormatFunctionMap[ChangeTypes.MULTIPLY_DENOMINATORS] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. 1/2 * 2/3 -> 2/6\nChange.changeFormatFunctionMap[ChangeTypes.MULTIPLY_FRACTIONS] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  const newNodes = getNewChangeNodes(step);\n  if (oldNodes.length !== 1 || newNodes.length !== 1) {\n    return null;\n  }\n\n  const opNode = oldNodes[0];\n  if (!NodeType.isOperator(opNode) || opNode.op !== '*') {\n    return null;\n  }\n\n  const before = nodesToString(opNode.args, true);\n  const after = newNodes[0].toTex();\n  return `\\\\text{Multiply } ${before} \\\\text{ to get } ${after}`;\n};\n\n// e.g. (2*2)/12 + (1*3)/12 -> 4/12 + 3/12\nChange.changeFormatFunctionMap[ChangeTypes.MULTIPLY_NUMERATORS] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. 2x * x -> 2x ^ 2\nChange.changeFormatFunctionMap[ChangeTypes.MULTIPLY_POLYNOMIAL_TERMS] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  const newNodes = getNewChangeNodes(step);\n  if (oldNodes.length !== 1 || newNodes.length !== 1) {\n    return null;\n  }\n\n  const opNode = oldNodes[0];\n  if (!NodeType.isOperator(opNode) || opNode.op !== '*') {\n    return null;\n  }\n\n  const before = nodesToString(opNode.args, true);\n  const after = newNodes[0].toTex();\n  return `\\\\text{Multiply } ${before} \\\\text{ to get } ${after}`;\n};\n\n// e.g. x/2 = 1 -> (x/2) * 2 = 1 * 2\nChange.changeFormatFunctionMap[ChangeTypes.MULTIPLY_TO_BOTH_SIDES] = function(step) {\n  const termNodes = getNewChangeNodes(step);\n  if (termNodes.length !== 2) {\n    return null;\n  }\n\n  const term = termNodes[0].toTex();\n  return `\\\\text{Multiply both sides by } ${term}`;\n};\n\n// This should never happen\nChange.changeFormatFunctionMap[ChangeTypes.NO_CHANGE] = function() {\n  return null;\n};\n\n// e.g. nthRoot(4) -> 2\nChange.changeFormatFunctionMap[ChangeTypes.NTH_ROOT_VALUE] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  if (oldNodes.length !== 1) {\n    return null;\n  }\n\n  const before = nodesToString(oldNodes);\n  return `\\\\text{Take the root of } ${before}`;\n};\n\n// e.g. x * 2 -> 2x\nChange.changeFormatFunctionMap[ChangeTypes.REARRANGE_COEFF] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. x ^ 0 -> 1\nChange.changeFormatFunctionMap[ChangeTypes.REDUCE_EXPONENT_BY_ZERO] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  const newNodes = getNewChangeNodes(step);\n  if (oldNodes.length !== 1 || newNodes.length !== 1) {\n    return null;\n  }\n\n  const before = nodesToString(oldNodes);\n  const after = nodesToString(newNodes);\n  return `\\\\text{Rewrite } ${before} \\\\text{ as } ${after}`;\n};\n\n// e.g. 0/1 -> 0\nChange.changeFormatFunctionMap[ChangeTypes.REDUCE_ZERO_NUMERATOR] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  const newNodes = getNewChangeNodes(step);\n  if (oldNodes.length !== 1 || newNodes.length !== 1) {\n    return null;\n  }\n\n  const before = nodesToString(oldNodes);\n  const after = nodesToString(newNodes);\n  return `\\\\text{Rewrite } ${before} \\\\text{ as } ${after}`;\n};\n\n// e.g. 2 + 0 -> 2\nChange.changeFormatFunctionMap[ChangeTypes.REMOVE_ADDING_ZERO] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. x ^ 1 -> x\nChange.changeFormatFunctionMap[ChangeTypes.REMOVE_EXPONENT_BY_ONE] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  const newNodes = getNewChangeNodes(step);\n  if (oldNodes.length !== 1 || newNodes.length !== 1) {\n    return null;\n  }\n\n  const before = nodesToString(oldNodes);\n  const after = nodesToString(newNodes);\n  return `\\\\text{Rewrite } ${before} \\\\text{ as } ${after}`;\n};\n\n// e.g. x * -1 -> -x\nChange.changeFormatFunctionMap[ChangeTypes.REMOVE_MULTIPLYING_BY_NEGATIVE_ONE] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  const newNodes = getNewChangeNodes(step);\n  if (oldNodes.length !== 1 || newNodes.length !== 1) {\n    return null;\n  }\n\n  const before = nodesToString(oldNodes);\n  const after = nodesToString(newNodes);\n  return `\\\\text{Rewrite } ${before} \\\\text{ as } ${after}`;\n};\n\n// e.g. x * 1 -> x\nChange.changeFormatFunctionMap[ChangeTypes.REMOVE_MULTIPLYING_BY_ONE] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  const newNodes = getNewChangeNodes(step);\n  if (oldNodes.length !== 1 || newNodes.length !== 1) {\n    return null;\n  }\n\n  const before = nodesToString(oldNodes);\n  const after = nodesToString(newNodes);\n  return `\\\\text{Rewrite } ${before} \\\\text{ as } ${after}`;\n};\n\n// e.g. 2 - - 3 -> 2 + 3\nChange.changeFormatFunctionMap[ChangeTypes.RESOLVE_DOUBLE_MINUS] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. 2 + 2 -> 4 or 2 * 2 -> 4\nChange.changeFormatFunctionMap[ChangeTypes.SIMPLIFY_ARITHMETIC] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  const newNodes = getNewChangeNodes(step);\n  if (oldNodes.length !== 1 || newNodes.length !== 1) {\n    return null;\n  }\n\n  const opNode = oldNodes[0];\n  if (!NodeType.isOperator(opNode) || '+-*/^'.indexOf(opNode.op) === -1) {\n    return null;\n  }\n\n  const before = nodesToString(opNode.args, true);\n  const after = newNodes[0].toTex();\n  return `\\\\text{${OP_TO_STRING[opNode.op]} } ${before} \\\\text{ to get } ${after}`;\n};\n\n// e.g. 2/3/4 -> 2/(3*4)\nChange.changeFormatFunctionMap[ChangeTypes.SIMPLIFY_DIVISION] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  const newNodes = getNewChangeNodes(step);\n  if (oldNodes.length !== 1 || newNodes.length !== 1) {\n    return null;\n  }\n\n  const before = nodesToString(oldNodes);\n  const after = nodesToString(newNodes);\n  return `\\\\text{Rewrite } ${before} \\\\text{ as } ${after}`;\n};\n\n// e.g. 2/6 -> 1/3\nChange.changeFormatFunctionMap[ChangeTypes.SIMPLIFY_FRACTION] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  const newNodes = getNewChangeNodes(step);\n  if (oldNodes.length !== 1 || newNodes.length !== 1) {\n    return null;\n  }\n\n  const before = nodesToString(oldNodes);\n  const after = nodesToString(newNodes);\n  return `\\\\text{Simplify } ${before} \\\\text{ to } ${after}`;\n};\n\n// e.g. x + 2 - 1 = 3 -> x + 1 = 3\nChange.changeFormatFunctionMap[ChangeTypes.SIMPLIFY_LEFT_SIDE] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. x = 3 - 1 -> x = 2\nChange.changeFormatFunctionMap[ChangeTypes.SIMPLIFY_RIGHT_SIDE] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. 2/-3 -> -2/3\nChange.changeFormatFunctionMap[ChangeTypes.SIMPLIFY_SIGNS] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. 2 * 4x + 2*5 --> 8x + 10\nChange.changeFormatFunctionMap[ChangeTypes.SIMPLIFY_TERMS] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. 2 = 2\nChange.changeFormatFunctionMap[ChangeTypes.STATEMENT_IS_FALSE] = function(step) {\n  const comparator = step.newEquation.comparator;\n  return `\\\\text{The left side is not ${COMPARATOR_TO_STRING[comparator]} the right side}`;\n};\n\n// e.g. 2 = 3\nChange.changeFormatFunctionMap[ChangeTypes.STATEMENT_IS_TRUE] = function(step) {\n  const comparator = step.newEquation.comparator;\n  return `\\\\text{The left side is ${COMPARATOR_TO_STRING[comparator]} the right side}`;\n};\n\n// e.g. x + 3 = 2 -> x + 3 - 3 = 2 - 3\nChange.changeFormatFunctionMap[ChangeTypes.SUBTRACT_FROM_BOTH_SIDES] = function(step) {\n  const termNodes = getNewChangeNodes(step);\n  if (termNodes.length !== 2) {\n    return null;\n  }\n\n  const term = termNodes[0].toTex();\n  return `\\\\text{Subtract } ${term} \\\\text{ from both sides}`;\n};\n\n// e.g. 2 = x -> x = 2\nChange.changeFormatFunctionMap[ChangeTypes.SWAP_SIDES] = function(step) {\n  return `\\\\text{${Change.ChangeText[step.changeType]}}`;\n};\n\n// e.g. 2x - x -> 2x - 1x\nChange.changeFormatFunctionMap[ChangeTypes.UNARY_MINUS_TO_NEGATIVE_ONE] = function(step) {\n  const oldNodes = getOldChangeNodes(step);\n  const newNodes = getNewChangeNodes(step);\n  if (oldNodes.length === 0 || newNodes.length !== oldNodes.length) {\n    return null;\n  }\n\n  const before = nodesToString(oldNodes);\n  const after = nodesToString(newNodes);\n  return `\\\\text{Rewrite } ${before} \\\\text{ as } ${after}`;\n};\n\nChange.ChangeText = {\n  ABSOLUTE_VALUE: 'Toma el valor absoluto',\n  ADD_COEFFICIENT_OF_ONE: 'Reescribir el término para que tenga un coeficiente de 1',\n  ADD_EXPONENT_OF_ONE: 'Reescribe el término para que tenga un exponente de 1',\n  ADD_FRACTIONS: 'Suma las fracciones',\n  ADD_NUMERATORS: 'Agrega los términos en el numerador',\n  ADD_POLYNOMIAL_TERMS: 'Suma los términos polinomiales',\n  ADD_TO_BOTH_SIDES: 'Agrega el término a ambos lados',\n  BREAK_UP_FRACTION: 'Divide la fracción',\n  CANCEL_EXPONENT: 'Cancelar el exponente',\n  CANCEL_EXPONENT_AND_ROOT: 'Cancelar el exponente y la raíz',\n  CANCEL_MINUSES: 'Cancelar los negativos en el numerador y denominador',\n  CANCEL_ROOT: 'Cancelar la raíz',\n  CANCEL_TERMS: 'Cancelar términos similares en el numerador y denominador',\n  COLLECT_AND_COMBINE_LIKE_TERMS: 'Recopilar y combinar términos similares',\n  COLLECT_EXPONENTS: 'Recoge los exponentes',\n  COLLECT_LIKE_TERMS: 'Identifica los términos similares y agrúpalos',\n  COMBINE_NUMERATORS: 'Combinar los numeradores con un denominador compartido',\n  COMMON_DENOMINATOR: 'Multiplica los términos para que compartan un denominador común',\n  COMBINE_UNDER_ROOT: 'Combinar términos con la misma raíz',\n  CONVERT_INTEGER_TO_FRACTION: 'Cambia el número a una fracción con el mismo denominador',\n  CONVERT_MULTIPLICATION_TO_EXPONENT: 'Cambiar repetidamente multiplicando un término por un exponente',\n  DISTRIBUIR: 'Distribuir entre paréntesis',\n  DISTRIBUTE_NEGATIVE_ONE: 'Distribuir -1 entre paréntesis',\n  DISTRIBUTE_NTH_ROOT: 'Distribuir la raíz en cada término',\n  DIVIDE_FRACTION_FOR_ADDITION: 'Divide las fracciones para convertirlas a forma decimal',\n  DIVIDE_FROM_BOTH_SIDES: 'Divide el término de ambos lados',\n  DIVISION_BY_NEGATIVE_ONE: 'Reescribe cualquier término dividido por -1 como el negativo del término',\n  DIVISION_BY_ONE: 'Reescribe cualquier término dividido por 1 como solo el término',\n  EVALUATE_DISTRIBUTED_NTH_ROOT: 'Saca la raíz de todos los términos',\n  FACTOR_INTO_PRIMES: 'Factoriza el número en sus factores primos',\n  GROUP_COEFFICIENTS: 'Agrupa los coeficientes',\n  GROUP_TERMS_BY_ROOT: 'Agrupar factores de repetición',\n  \n  MULTIPLY_BOTH_SIDES_BY_INVERSE_FRACTION: 'Multiplica ambos lados por el inverso de la fracción',\n  MULTIPLY_BOTH_SIDES_BY_NEGATIVE_ONE: 'Multiplica ambos lados por -1',\n  MULTIPLY_BY_INVERSE: 'Reescribe la división como multiplicación por el inverso',\n  MULTIPLY_BY_ZERO: 'Reescribe cualquier término multiplicado por 0 como 0',\n  MULTIPLY_COEFFICIENTS: 'Multiplica los coeficientes juntos',\n  MULTIPLY_DENOMINATORS: 'Multiplica los términos en los denominadores',\n  MULTIPLY_FRACTIONS: 'Multiplica las fracciones',\n  MULTIPLY_NUMERATORS: 'Multiplica los términos en los numeradores',\n  MULTIPLY_POLYNOMIAL_TERMS: 'Multiplica los términos polinomiales juntos',\n  MULTIPLY_TO_BOTH_SIDES: 'Multiplica el término a ambos lados',\n  NTH_ROOT_VALUE: 'Saca la raíz del número',\n  NO_CHANGE: 'Sin cambios',\n  REARRANGE_COEFF: 'Mover el coeficiente al principio del término',\n  REDUCE_ZERO_NUMERATOR: 'Reescribe cero dividido por cualquier cosa como cero',\n  REMOVE_EXPONENT_BY_ONE: 'Reescribe cualquier término a la potencia de 1 como él mismo',\n  REDUCE_EXPONENT_BY_ZERO: 'Reescribe cualquier término a la potencia de 0 como 1',\n  REMOVE_ADDING_ZERO: 'Eliminar cero al agregar',\n  REMOVE_MULTIPLYING_BY_NEGATIVE_ONE: 'Reescribe cualquier término multiplicado por -1 como el negativo del término',\n  REMOVE_MULTIPLYING_BY_ONE: 'Reescribe cualquier término multiplicado por 1 como solo el término',\n  RESOLVE_DOUBLE_MINUS: 'Cambiar restar un negativo a suma',\n  SIMPLIFY_ARITHMETIC: 'Evaluar la aritmética',\n  SIMPLIFY_DIVISION: 'Reescribe la cadena de división',\n  SIMPLIFY_FRACTION: 'Simplifique dividiendo la parte superior e inferior por el máximo común denominador',\n  SIMPLIFY_LEFT_SIDE: 'Simplifica el lado izquierdo',\n  SIMPLIFY_RIGHT_SIDE: 'Simplifica el lado derecho',\n  SIMPLIFY_SIGNS: 'Mueve el signo negativo al numerador',\n  SIMPLIFY_TERMS: 'Simplificar después de distribuir',\n  STATEMENT_IS_FALSE: 'La declaración es falsa',\n  STATEMENT_IS_TRUE: 'La declaración es verdadera',\n  SUBTRACT_FROM_BOTH_SIDES: 'Resta el término de ambos lados',\n  SWAP_SIDES: 'Cambiar lados',\n  UNARY_MINUS_TO_NEGATIVE_ONE: 'Reescribe menos como un coeficiente de -1',\n  \n};\n\nexport default Change;\n\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport TeX from '../react-components/tex.jsx';\n\nimport '../styles/steps.css';\nimport print from '../print.js';\nimport Change from '../Change.js';\n\nexport default class Step extends Component {\n  static propTypes = {\n    step: PropTypes.object, // TODO flesh this out with shapeof\n    index: PropTypes.string\n  };\n\n  state = {\n    substepsExpanded: false\n  }\n\n  toggleSubsteps = () => {\n    const {substepsExpanded} = this.state;\n\n    this.setState({\n      substepsExpanded: !substepsExpanded\n    });\n  }\n\n  renderStep = (step) => {\n    return <div className='step latex'>\n      <div><TeX>{print.newNode(step)}</TeX></div>\n    </div>;\n  }\n\n  renderSubsteps = (step) => {\n    const substeps = step.substeps;\n\n    if (substeps.length === 0) return null;\n\n    return <div className='substeps'>\n      <div className='latex'><TeX>{print.oldNode(substeps[0])}</TeX></div>\n      {substeps.map((step, index) => <Step\n        step={step}\n        key={this.props.index + index.toString()}\n      />)}\n    </div>;\n  }\n\n  render() {\n    const {step} = this.props;\n    const {substepsExpanded} = this.state;\n\n    const toggleText = <div onClick={this.toggleSubsteps}>\n      <div className='toggleSubsteps'>\n        {this.state.substepsExpanded ? '▼' : '►'} Subpasos\n      </div>\n    </div>;\n\n    return <div key={print.oldNode(step)}>\n      <div className='changeDescription'>\n        <TeX>{Change.formatChange(step)}</TeX>\n      </div>\n      {step.substeps.length > 0 && toggleText}\n      {substepsExpanded && this.renderSubsteps(step)}\n      {this.renderStep(step)}\n    </div>\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport TeX from '../react-components/tex.jsx';\nimport mathsteps from 'mathsteps';\n\nimport print from '../print.js';\nimport Step from './Step.jsx';\nimport '../styles/steps.css';\n\nexport default class Steps extends Component {\n  static propTypes = {\n    input: PropTypes.string\n  };\n\n  isEquation(mathInput) {\n    const comparators = ['<=', '>=', '=', '<', '>'];\n    let isEquation = false;\n\n    comparators.forEach(comparator => {\n      if (mathInput.includes(comparator)) isEquation = true;\n    });\n    return isEquation;\n  }\n\n  renderSteps = (steps) => {\n    const renderedSteps = steps.map(\n      (step, index) => <Step step={step} key={index}/>);\n    return <div>\n      <div className='latex'><TeX>{print.oldNode(steps[0])}</TeX></div>\n      {renderedSteps}\n    </div>;\n  }\n\n  render() {\n    const {input} = this.props;\n    const isEquation = this.isEquation(input);\n    const steps = isEquation\n      ? mathsteps.solveEquation(input)\n      : mathsteps.simplifyExpression(input);\n\n    \n\n      \n    if (steps.length === 0) {\n\n      \n      return <div className='error'>\n          \n        Ingresa la ecuación que agregaste anteriormente. <br/> <br/>\n        Esto probablemente se deba a que: <br/>\n        1. Tu novia te dejo <br/>\n        \n        2. Esto ya está simplificado / resuelto <br/>\n        3. Aún no a ingresado datos.\n      </div>;\n    }  \n\n\n\n    return <div className='steps'>\n      {this.renderSteps(steps)}\n    </div>;\n  }\n}\n","import React, { Component } from 'react';\nimport TextField from 'material-ui/TextField';\n\nimport Steps from './Steps.jsx';\nimport '../styles/demo.css';\n\nexport default class App extends Component {\n \n  state = {\n    mathString: ''\n  };\n\n  onMathStringChange = (_, newValue) => {\n    this.setState({\n      mathString: newValue\n    });\n  }\n\n  componentDidMount(){\n    this.nameInput.focus();\n  }\n \n  render() {\n    // TODO: render input in tex as it's being drawn\n    return <div className='demo'>\n      <div className='input'>\n        <span className='yourInput'>\n          Entrada de datos:\n        </span>\n        <TextField\n          name='mathString'\n          value={this.state.mathString}\n          ref={this.myRef}\n          hintText='Ingresa la ecuación a realizar'\n          ref={(input) => { this.nameInput = input; }} \n          onChange={this.onMathStringChange}\n          underlineFocusStyle={{borderColor: '#1d84ff'}}\n        />\n      </div>\n      <div className=\"stepsTitle\">Pasos</div>\n      <Steps input={this.state.mathString}/>\n    </div>;\n  }\n}\n","import React, { Component } from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\n\nimport logo from './logo.png';\nimport Demo from './components/Demo.jsx'\nimport './styles/App.css';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider>\n          <div className='App'>\n          <div className='App-header'>\n             <h2>SoluMath</h2>\n          \n          </div>\n          <Demo/>\n         </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}